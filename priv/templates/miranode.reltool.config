%% -*- mode: erlang -*-
%% ex: ft=erlang

{sys, [

    {lib_dirs, ["../deps", "../apps"]},

    {erts, [{mod_cond, derived}, {app_file, strip}]},
    {app_file, strip},

    {rel, "{{ nodeid }}", "#APPLICATION_VERSION#", [
        {{ nodeid }}
    ]},

    {rel, "start_clean", "", [
            kernel
        ,   stdlib
    ]},

    {boot_rel, "{{ nodeid }}"},
    {profile, embedded},
    {incl_cond, exclude},

    %% Do not archive built libs - breaks platform_tools (specifically pt_util_sha2.so)
    {excl_archive_filters, [".*"]}, 

    {excl_sys_filters, ["^bin/.*", "^erts.*/bin/(dialyzer|typer)"]},

    %Look at miranode.template_vars.example for how to add your custom entries 
    %here. You then need to pass the path to your file to rebar in the 
    %templat_vars %parameter like so: 
    %           template_vars=path_to_my_template_vars

    %Custom reltool.config app includes start
    {{reltool_app_includes}}
    %Custom reltool.config app includes end

    {app, {{ nodeid }}, [{incl_cond, include}]}

]}.

{target_dir, "{{ nodeid }}"}.

{overlay, [

    {mkdir, "log/sasl"},
    {mkdir, "priv/ssl"},
    {mkdir, "os_scripts"},
    {mkdir, "monitoring"},
    {mkdir, "reports"},
    {mkdir, "config"},
    {mkdir, "etc"},

    {copy, "files/ssl",                "priv"},
    {copy, "files/os_scripts",         "."},
    {copy, "files/monitoring",         "."},
    {copy, "files/reports",            "."},
    {copy, "files/config",             "."},

    {copy, "files/erl",                "\{\{erts_vsn\}\}/bin/erl"},
    {copy, "files/nodetool",           "\{\{erts_vsn\}\}/bin/nodetool"},
    {copy, "files/{{nodeid}}",         "bin/{{nodeid}}"},
    
    % This stuff relates to cuttlefish; the bridge between 
    % /etc/default/{{package_name}}.conf and the erlang VM
    {template, "schemas/00-{{nodeid}}.schema",   "lib/00-{{nodeid}}.schema"},
    {template, "schemas/99-erlang_vm.schema",    "lib/99-erlang_vm.schema"},
    {copy,     "../deps/cuttlefish/cuttlefish",  "bin/cuttlefish"},

    % This is an erlang app.config file containing hairy stuff that 
    % sysadmins should not have to deal with when deploying the app. It
    % will contain all of the knobs-and-dails that you do not want to 
    % expose in /etc/default/{{package_name}}.conf
    {copy,     "files/config/advanced.config",   "etc/advanced.config"}


]}.

